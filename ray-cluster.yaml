cluster_name: mps-ray

provider:
  type: aws
  region: us-east-2
  availability_zone: us-east-2a
  cache_stopped_nodes: false

# ── SSH settings on your laptop ───────────────────────────────
auth:
  ssh_user: ec2-user
  ssh_private_key: ~/.ssh/ray-mps-key.pem   # local path to PEM

# ── Cluster size ──────────────────────────────────────────────
max_workers: 20
idle_timeout_minutes: 5            # terminate workers after 5 min idle

# ── Node types ────────────────────────────────────────────────
available_node_types:
  head_node:
    node_config:
      KeyName: ray-mps-key                       # EC2 key-pair name
      InstanceType: t3.xlarge  
      ImageId: ami-06971c49acd687c30
      SubnetId: subnet-02fbc81414d827515
      SecurityGroupIds: [sg-01cabcd4f45211888]
      IamInstanceProfile:
        Arn: arn:aws:iam::654654140494:instance-profile/ray-mps-profile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs: { VolumeSize: 50 }
    resources: { CPU: 4 }
    min_workers: 0
    max_workers: 0                # head only

  worker_node:
    node_config:
      KeyName: ray-mps-key                       # EC2 key-pair name
      InstanceType: t3a.2xlarge
      ImageId: ami-06971c49acd687c30
      SubnetId: subnet-02fbc81414d827515
      SecurityGroupIds: [sg-01cabcd4f45211888]
      IamInstanceProfile:
        Arn: arn:aws:iam::654654140494:instance-profile/ray-mps-profile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs: { VolumeSize: 50 }
    resources:
      CPU: 8
      memory: 34359738368
    min_workers: 0
    max_workers: 15

head_node_type: head_node

initialization_commands:
  - sudo curl -O https://bootstrap.pypa.io/get-pip.py
  - sudo python3 get-pip.py
  - wget https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.rpm
  - sudo yum install -y ./mount-s3.rpm
  - mount-s3 --version
  - sudo dnf install -y fuse3 fuse3-libs --allowerasing
  - sudo pip3 install ray
  - sudo pip3 install projectaria-tools==1.6.0
  - sudo pip3 install boto3
  - sudo pip3 install moviepy==1.0.3
  - curl -L https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz -o ffmpeg.tar.xz
  - tar -xf ffmpeg.tar.xz
  - sudo cp ffmpeg-*-amd64-static/ffmpeg /usr/local/bin/
  - sudo cp ffmpeg-*-amd64-static/ffprobe /usr/local/bin/    # ✅ ffprobe
  - sudo chmod +x /usr/local/bin/ffmpeg /usr/local/bin/ffprobe
  - ffmpeg -version || echo "❌ ffmpeg failed to install"
  - ffprobe -version || echo "❌ ffprobe failed to install"
  - sudo yum install -y git
  - sudo pip3 install Pillow

setup_commands:
  - sudo mkdir -p /mnt/raw
  - |
      if mountpoint -q /mnt/raw; then
        echo "/mnt/raw already mounted"
      else
        sudo mount-s3 \
          s3://rldb/raw_v2/ /mnt/raw \
          --allow-other \
          --allow-delete \
          --allow-overwrite \
          --uid=$(id -u ec2-user) \
          --gid=$(id -g ec2-user) \
          --file-mode=777 --dir-mode=777
      fi  
  - |
      echo "running write-delete test..."
      echo "test123" > /mnt/raw/__write_delete_test.txt
      if rm /mnt/raw/__write_delete_test.txt; then
        echo "✅ write-delete test passed"
      else
        echo "❌ write-delete test failed"
      fi
  - |
      if [ ! -d ~/mps_pipeline ]; then
        git clone https://github.com/ryanthecreator/mps_pipeline ~/mps_pipeline
      else
        git -C ~/mps_pipeline pull --ff-only
      fi
  - chmod +x ~/mps_pipeline/run_daily_mps_v2.py
  - sudo dnf install -y cronie
  - sudo systemctl enable --now crond
  - |
      (crontab -l 2>/dev/null | grep -v run_daily_mps_v2.py ; \
       echo 'CRON_TZ=America/New_York' ; \
       echo '0 20 * * * PATH=/usr/local/bin:/usr/bin:/bin /usr/bin/python3 /home/ec2-user/mps_pipeline/run_daily_mps_v2.py >> /home/ec2-user/mps_daily.log 2>&1' \
      ) | crontab -
  - crontab -l
